{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\had-project\\\\senior-doctor-video-call\\\\front\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport MicOffIcon from \"@material-ui/icons/MicOff\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport Peer from \"simple-peer\";\nimport io from \"socket.io-client\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io.connect('http://localhost:5000');\nfunction App() {\n  _s();\n  const [me, setMe] = useState(\"\");\n  const [stream, setStream] = useState();\n  const [receivingCall, setReceivingCall] = useState(false);\n  const [caller, setCaller] = useState(\"\");\n  const [callerSignal, setCallerSignal] = useState();\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [idToCall, setIdToCall] = useState(\"\");\n  const [callEnded, setCallEnded] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [isMuted, setIsMuted] = useState(false);\n  const myVideo = useRef(null);\n  const userVideo = useRef();\n  const connectionRef = useRef();\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      setStream(stream);\n      if (myVideo.current) {\n        myVideo.current.srcObject = stream;\n      }\n    });\n    socket.on(\"me\", id => {\n      setMe(id);\n    });\n    socket.on(\"callUser\", data => {\n      setReceivingCall(true);\n      setCaller(data.from);\n      setName(data.name);\n      setCallerSignal(data.signal);\n    });\n  }, []);\n  const callUser = id => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream: stream\n    });\n    peer.on(\"signal\", data => {\n      socket.emit(\"callUser\", {\n        userToCall: id,\n        signalData: data,\n        from: me,\n        name: name\n      });\n    });\n    peer.on(\"stream\", stream => {\n      userVideo.current.srcObject = stream;\n    });\n    socket.on(\"callAccepted\", signal => {\n      setCallAccepted(true);\n      peer.signal(signal);\n    });\n    connectionRef.current = peer;\n  };\n  const answerCall = () => {\n    setCallAccepted(true);\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream: stream\n    });\n    peer.on(\"signal\", data => {\n      socket.emit(\"answerCall\", {\n        signal: data,\n        to: caller\n      });\n    });\n    peer.on(\"stream\", stream => {\n      userVideo.current.srcObject = stream;\n    });\n    peer.signal(callerSignal);\n    connectionRef.current = peer;\n  };\n  const leaveCall = () => {\n    setCallEnded(true);\n    connectionRef.current.destroy();\n  };\n  const toggleMute = () => {\n    if (stream) {\n      const audioTracks = stream.getAudioTracks();\n      if (audioTracks.length > 0) {\n        audioTracks[0].enabled = !isMuted;\n        setIsMuted(!isMuted);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\",\n        color: \"#fff\"\n      },\n      children: \"Video Call\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video\",\n          children: stream && /*#__PURE__*/_jsxDEV(\"video\", {\n            playsInline: true,\n            muted: true,\n            ref: myVideo,\n            autoPlay: true,\n            style: {\n              width: \"400px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video\",\n          children: callAccepted && !callEnded ? /*#__PURE__*/_jsxDEV(\"video\", {\n            playsInline: true,\n            ref: userVideo,\n            autoPlay: true,\n            style: {\n              width: \"400px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 74\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"myId\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"filled-basic\",\n          label: \"Name\",\n          variant: \"filled\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          style: {\n            marginBottom: \"20px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n          text: me,\n          style: {\n            marginBottom: \"2rem\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            startIcon: /*#__PURE__*/_jsxDEV(AssignmentIcon, {\n              fontSize: \"large\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 80\n            }, this),\n            children: \"Copy ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"filled-basic\",\n          label: \"ID to call\",\n          variant: \"filled\",\n          value: idToCall,\n          onChange: e => setIdToCall(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"call-button\",\n          children: [callAccepted && !callEnded ? /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"secondary\",\n            onClick: leaveCall,\n            children: \"End Call\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"primary\",\n            \"aria-label\": \"call\",\n            onClick: () => callUser(idToCall),\n            children: /*#__PURE__*/_jsxDEV(PhoneIcon, {\n              fontSize: \"large\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"primary\",\n            \"aria-label\": \"mute\",\n            onClick: toggleMute,\n            children: isMuted ? /*#__PURE__*/_jsxDEV(MicOffIcon, {\n              fontSize: \"large\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 40\n            }, this) : /*#__PURE__*/_jsxDEV(MicIcon, {\n              fontSize: \"large\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 74\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: receivingCall && !callAccepted ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"caller\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [name, \" is calling...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 80\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: answerCall,\n            children: \"Answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 109\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 56\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"LRMXfipwAEKChGfDLYyk5KItko8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Button","IconButton","TextField","AssignmentIcon","PhoneIcon","MicIcon","MicOffIcon","React","useEffect","useRef","useState","CopyToClipboard","Peer","io","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","connect","App","_s","me","setMe","stream","setStream","receivingCall","setReceivingCall","caller","setCaller","callerSignal","setCallerSignal","callAccepted","setCallAccepted","idToCall","setIdToCall","callEnded","setCallEnded","name","setName","isMuted","setIsMuted","myVideo","userVideo","connectionRef","navigator","mediaDevices","getUserMedia","video","audio","then","current","srcObject","on","id","data","from","signal","callUser","peer","initiator","trickle","emit","userToCall","signalData","answerCall","to","leaveCall","destroy","toggleMute","audioTracks","getAudioTracks","length","enabled","children","style","textAlign","color","fileName","_jsxFileName","lineNumber","columnNumber","className","playsInline","muted","ref","autoPlay","width","label","variant","value","onChange","e","target","marginBottom","text","startIcon","fontSize","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/Documents/had-project/senior-doctor-video-call/front/src/App.js"],"sourcesContent":["import Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport PhoneIcon from \"@material-ui/icons/Phone\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport MicOffIcon from \"@material-ui/icons/MicOff\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport Peer from \"simple-peer\";\nimport io from \"socket.io-client\";\nimport \"./App.css\";\n\nconst socket = io.connect('http://localhost:5000');\n\nfunction App() {\n    const [me, setMe] = useState(\"\");\n    const [stream, setStream] = useState();\n    const [receivingCall, setReceivingCall] = useState(false);\n    const [caller, setCaller] = useState(\"\");\n    const [callerSignal, setCallerSignal] = useState();\n    const [callAccepted, setCallAccepted] = useState(false);\n    const [idToCall, setIdToCall] = useState(\"\");\n    const [callEnded, setCallEnded] = useState(false);\n    const [name, setName] = useState(\"\");\n    const [isMuted, setIsMuted] = useState(false);\n    const myVideo = useRef(null);\n    const userVideo = useRef();\n    const connectionRef = useRef();\n\n    useEffect(() => {\n        navigator.mediaDevices.getUserMedia({ video: true, audio: true }).then((stream) => {\n            setStream(stream);\n            if (myVideo.current) {\n                myVideo.current.srcObject = stream;\n            }\n        });\n\n        socket.on(\"me\", (id) => {\n            setMe(id);\n        });\n\n        socket.on(\"callUser\", (data) => {\n            setReceivingCall(true);\n            setCaller(data.from);\n            setName(data.name);\n            setCallerSignal(data.signal);\n        });\n    }, []);\n\n    const callUser = (id) => {\n        const peer = new Peer({\n            initiator: true,\n            trickle: false,\n            stream: stream,\n        });\n        peer.on(\"signal\", (data) => {\n            socket.emit(\"callUser\", {\n                userToCall: id,\n                signalData: data,\n                from: me,\n                name: name,\n            });\n        });\n        peer.on(\"stream\", (stream) => {\n            userVideo.current.srcObject = stream;\n        });\n        socket.on(\"callAccepted\", (signal) => {\n            setCallAccepted(true);\n            peer.signal(signal);\n        });\n\n        connectionRef.current = peer;\n    };\n\n    const answerCall = () => {\n        setCallAccepted(true);\n        const peer = new Peer({\n            initiator: false,\n            trickle: false,\n            stream: stream,\n        });\n        peer.on(\"signal\", (data) => {\n            socket.emit(\"answerCall\", { signal: data, to: caller });\n        });\n        peer.on(\"stream\", (stream) => {\n            userVideo.current.srcObject = stream;\n        });\n\n        peer.signal(callerSignal);\n        connectionRef.current = peer;\n    };\n\n    const leaveCall = () => {\n        setCallEnded(true);\n        connectionRef.current.destroy();\n    };\n\n    const toggleMute = () => {\n      if (stream) {\n          const audioTracks = stream.getAudioTracks();\n          if (audioTracks.length > 0) {\n              audioTracks[0].enabled = !isMuted;\n              setIsMuted(!isMuted);\n          }\n      }\n  };\n  \n\n    return (\n        <>\n            <h1 style={{ textAlign: \"center\", color: \"#fff\" }}>Video Call</h1>\n            <div className=\"container\">\n                <div className=\"video-container\">\n                    <div className=\"video\">{stream && <video playsInline muted ref={myVideo} autoPlay style={{ width: \"400px\" }} />}</div>\n                    <div className=\"video\">{callAccepted && !callEnded ? <video playsInline ref={userVideo} autoPlay style={{ width: \"400px\" }} /> : null}</div>\n                </div>\n                <div className=\"myId\">\n                    <TextField id=\"filled-basic\" label=\"Name\" variant=\"filled\" value={name} onChange={(e) => setName(e.target.value)} style={{ marginBottom: \"20px\" }} />\n                    <CopyToClipboard text={me} style={{ marginBottom: \"2rem\" }}>\n                        <Button variant=\"contained\" color=\"primary\" startIcon={<AssignmentIcon fontSize=\"large\" />}>\n                            Copy ID\n                        </Button>\n                    </CopyToClipboard>\n                    <TextField id=\"filled-basic\" label=\"ID to call\" variant=\"filled\" value={idToCall} onChange={(e) => setIdToCall(e.target.value)} />\n                    <div className=\"call-button\">\n                        {callAccepted && !callEnded ? (\n                            <Button variant=\"contained\" color=\"secondary\" onClick={leaveCall}>\n                                End Call\n                            </Button>\n                        ) : (\n                            <IconButton color=\"primary\" aria-label=\"call\" onClick={() => callUser(idToCall)}>\n                                <PhoneIcon fontSize=\"large\" />\n                            </IconButton>\n                        )}\n                        <IconButton color=\"primary\" aria-label=\"mute\" onClick={toggleMute}>\n                            {isMuted ? <MicOffIcon fontSize=\"large\" /> : <MicIcon fontSize=\"large\" />}\n                        </IconButton>\n                    </div>\n                </div>\n                <div>{receivingCall && !callAccepted ? <div className=\"caller\"><h1>{name} is calling...</h1><Button variant=\"contained\" color=\"primary\" onClick={answerCall}>Answer</Button></div> : null}</div>\n            </div>\n        </>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}